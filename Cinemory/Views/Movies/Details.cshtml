@model Cinemory.Models.Movie

@{
	ViewData["Title"] = Model.Name;
}

<style>
	.star {
		font-size: 22px;
		cursor: pointer;
		color: #999;
		transition: color 0.2s;
	}

		.star.selected, .star.hovered {
			color: gold;
		}
</style>

<div class="container-fluid mt-5">
	<div class="row gx-3 align-items-start">

		<!-- Sol: Poster -->
		<div class="col-md-4 d-flex justify-content-start">
			<img src="/images/@(string.IsNullOrEmpty(Model.Profile?.PosterUrl) ? "posters/_no_poster.jpg" : $"posters/{Model.Profile.PosterUrl}")"
				 alt="@Model.Name Poster"
				 style="width: auto; max-width: 100%; height: auto; max-height: 6000px; border-radius: 2px;"
				 class="img-fluid rounded shadow" />
		</div>


		<!-- Orta: Bilgiler -->
		<div class="col-md-4 px-3 ">
			<h2>@Model.Name (@Model.Year)</h2>
			<p><strong>Director:</strong> @Model.Director?.FullName</p>
			<p><strong>Genres:</strong> @string.Join(", ", Model.Genres.Select(g => g.Genre.Name))</p>
			<p><strong>Actors:</strong> @string.Join(", ", Model.Actors.Select(a => a.Actor.FullName))</p>

			@if (!string.IsNullOrWhiteSpace(Model.Profile?.Synopsis))
			{
				<div class="mt-3">
					<h5 style="font-weight:bold">Synopsis</h5>
					<p>@Model.Profile.Synopsis</p>
				</div>
			}

			@if (!string.IsNullOrWhiteSpace(Model.Profile?.TrailerUrl))
			{
				<h5 style="font-weight:bold">Watch Trailer</h5>
				<iframe class="embed-responsive-item"
						style="width: 100%; height: 250px;"
						src="@Model.Profile.TrailerUrl"
						frameborder="0"
						allowfullscreen>
				</iframe>
			}
		</div>

		<!-- Sağ: Kullanıcı Etkileşimi -->
		@if (User.Identity.IsAuthenticated)
		{
			<div class="col-md-4 d-flex justify-content-end" >
				<form asp-controller="Movies" asp-action="Interact" method="post" style="width: 85%; ">
					@Html.AntiForgeryToken()
					<input type="hidden" name="MovieId" value="@Model.Id" />
					<input type="hidden" name="Rating" id="ratingInput" value="0" />

					<div class="mb-2">
						<label><strong>Rate:</strong></label>
						<div class="star-rating d-flex flex-wrap gap-1">
							@for (int i = 1; i <= 10; i++)
							{
								<span class="star" data-value="@i">&#9734;</span>
							}
						</div>
					</div>

					<div class="form-check">
						<input type="checkbox" class="form-check-input" name="IsFavorite" id="favCheck" />
						<label class="form-check-label" style="font-weight:bold" for="favCheck">Add to Favorites</label>
					</div>

					<div class="form-check mt-2">
						<input type="checkbox" class="form-check-input" name="IsInWatchlist" id="wlCheck" />
						<label class="form-check-label" style="font-weight:bold" for="wlCheck">Add to Watchlist</label>
					</div>

					<div class="form-group mt-3">
						<label style="font-weight:bold"for="reviewText">Review:</label>
						<textarea name="Review" id="reviewText" class="form-control" rows="3" placeholder="Write your thoughts..."></textarea>
					</div>

					<button type="submit" class="btn btn-success mt-3 w-100">Submit</button>
				</form>
			</div>
		}
	</div>
</div>

<script>
	const stars = document.querySelectorAll('.star');
	const ratingInput = document.getElementById('ratingInput');

	stars.forEach(star => {
		star.addEventListener('mouseover', () => {
			const val = parseInt(star.dataset.value);
			stars.forEach(s => {
				s.classList.toggle('hovered', parseInt(s.dataset.value) <= val);
			});
		});

		star.addEventListener('mouseout', () => {
			const val = parseInt(ratingInput.value);
			stars.forEach(s => {
				s.classList.remove('hovered');
				s.classList.toggle('selected', parseInt(s.dataset.value) <= val);
			});
		});

		star.addEventListener('click', () => {
			const val = parseInt(star.dataset.value);
			ratingInput.value = val;
			stars.forEach(s => {
				s.classList.remove('selected', 'hovered');
				s.classList.toggle('selected', parseInt(s.dataset.value) <= val);
			});
		});
	});
</script>



